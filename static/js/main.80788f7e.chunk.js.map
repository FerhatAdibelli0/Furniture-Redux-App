{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","redux/ui.js","redux/cart.js","redux/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","redux/cart-actions.js","index.js"],"names":["module","exports","uiSlice","createSlice","name","initialState","isShown","notification","reducers","state","setNotification","action","status","payload","message","title","uiSliceActions","actions","cartSlice","items","totalQuantity","changed","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalprice","price","push","removeItemFromCart","filter","cartSliceActions","store","configureStore","reducer","ui","cart","Card","props","className","classes","card","children","CartItem","total","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","useSelector","map","fun","CartButton","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY","Products","products","Notification","specialClasses","error","success","cssClasses","initialSent","App","useEffect","a","sentRequest","fetch","method","body","JSON","stringify","ok","Error","sentCartData","fetchData","response","json","data","responsedata","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80788f7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__3I_L2\",\"details\":\"CartItem_details__2eeqa\",\"quantity\":\"CartItem_quantity__1WfL-\",\"price\":\"CartItem_price__Riiq0\",\"itemprice\":\"CartItem_itemprice__11Me9\",\"actions\":\"CartItem_actions__1Ah3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2szST\",\"price\":\"ProductItem_price__2sOMx\",\"actions\":\"ProductItem_actions__29ANV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1Tg8j\",\"error\":\"Notification_error__2Bk3V\",\"success\":\"Notification_success__39Jhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3AYuf\",\"badge\":\"CartButton_badge__PcG9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2mbNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3NctA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__1Awwa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__30jgI\"};","import {  createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialuiState = {\r\n  isShown: false,\r\n  notification:null\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState: initialuiState,\r\n  reducers: {\r\n    isShown(state) {\r\n      state.isShown = !state.isShown;\r\n    },\r\n    setNotification(state,action){\r\n      state.notification={\r\n        status:action.payload.status,\r\n        message:action.payload.message,\r\n        title:action.payload.title\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport const uiSliceActions = uiSlice.actions;\r\n\r\nexport default uiSlice.reducer\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartState = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n  changed: false,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: initialCartState,\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.items = action.payload.items;\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      state.totalQuantity++;\r\n      state.changed = true;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          name: newItem.title,\r\n          quantity: 1,\r\n          price: newItem.price,\r\n          totalprice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalprice = existingItem.totalprice + existingItem.price;\r\n      }\r\n    },\r\n\r\n    removeItemFromCart(state, action) {\r\n      const existingItem = state.items.find(\r\n        (item) => item.id === action.payload\r\n      );\r\n      state.totalQuantity--;\r\n      state.changed = true;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== action.payload);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalprice = existingItem.totalprice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartSliceActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport uiSlice from \"../redux/ui\";\r\nimport cartSlice from \"../redux/cart\";\r\n\r\nexport const cartSliceActions = cartSlice.actions;\r\n\r\nconst store = configureStore({\r\n  reducer: { ui: uiSlice, cart: cartSlice },\r\n});\r\n\r\nexport default store;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import classes from \"./CartItem.module.css\";\nimport { cartSliceActions } from \"../../redux/cart\";\nimport { useDispatch } from \"react-redux\";\n\nconst CartItem = (props) => {\n  const { title, quantity, total, price, id } = props.item;\n  const dispatch = useDispatch();\n\n  const increaseHandler = () => {\n    dispatch(\n      cartSliceActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  const decreaseHandler = () => {\n    dispatch(cartSliceActions.removeItemFromCart(id));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={decreaseHandler}>-</button>\n          <button onClick={increaseHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\nimport { useSelector } from \"react-redux\";\n\nconst Cart = (props) => {\n  const items = useSelector((state) => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {items.map((fun) => (\n          <CartItem\n            key={fun.id}\n            item={{\n              id: fun.id,\n              title: fun.name,\n              quantity: fun.quantity,\n              total: fun.totalprice,\n              price: fun.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from \"./CartButton.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uiSliceActions } from \"../../redux/ui\";\n\nconst CartButton = (props) => {\n  const totalQuantity = useSelector((state) => state.cart.totalQuantity);\n\n  const dispatch = useDispatch();\n\n  const cartHandler = () => {\n    dispatch(uiSliceActions.isShown());\n  };\n\n  return (\n    <button className={classes.button} onClick={cartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>Adibelli-Redux</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { cartSliceActions } from \"../../redux/cart\";\nimport { useDispatch } from \"react-redux\";\n\nconst ProductItem = (props) => {\n\n  const dispatch = useDispatch();\n\n  const { title, price, description, id } = props;\n\n  const addToCartHandler = () => {\n    // and then send Http request\n    // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n\n    dispatch(\n      cartSliceActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY = [\n  {\n    id: 1,\n    name: \"LED TV Stand\",\n    quantity: 1,\n    price: 28,\n    description: \"TV Media Console for Living Room Bedroom Light Gray\",\n  },\n  {\n    id: 2,\n    name: \"Glass Door Storage TV Console\",\n    quantity: 1,\n    price: 57,\n    description: \"A solid, sturdy piece of beautiful furniture\",\n  },\n  {\n    id: 3,\n    name: \"Holliday Corner TV Stand\",\n    quantity: 1,\n    price: 45,\n    description:\n      \"Hinged method construction allows for easy assembly in minutes\",\n  },\n  {\n    id: 4,\n    name: \"FirsTime & Co. Black Big Time\",\n    quantity: 1,\n    price: 26,\n    description: \"This clock is so beautiful!\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY.map((item) => (\n          <ProductItem\n            id={item.id}\n            key={item.id}\n            title={item.name}\n            price={item.price}\n            description={item.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;","import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Fragment, useEffect } from \"react\";\nimport Notification from \"./components/UI/Notification\";\nimport { sentCartData, fetchingData } from \"./redux/cart-actions\";\n\nlet initialSent = true;\n\nfunction App() {\n  let isShown = useSelector((state) => state.ui.isShown);\n  const totalQuantity = useSelector((state) => state.cart.totalQuantity);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (initialSent) {\n      initialSent = false;\n      return;\n    }\n    if (cart.changed) {\n      dispatch(sentCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchingData());\n  }, [dispatch]);\n\n  if (totalQuantity === 0) {\n    isShown = false;\n  }\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {isShown && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { uiSliceActions } from \"./ui\";\r\nimport { cartSliceActions } from \"./cart\";\r\n\r\nexport const fetchingData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://ferhat-s-first-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong...\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const responsedata = await fetchData();\r\n      dispatch(\r\n        cartSliceActions.replaceCart({\r\n          items: responsedata.items || [],\r\n          totalQuantity: responsedata.totalQuantity,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiSliceActions.setNotification({\r\n          status: \"error\",\r\n          title: \"Error \",\r\n          message: \"Getting an failed in Response\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const sentCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiSliceActions.setNotification({\r\n        status: \"pending\",\r\n        title: \"Pending \",\r\n        message: \"Request is sent \",\r\n      })\r\n    );\r\n\r\n    const sentRequest = async () => {\r\n      const request = await fetch(\r\n        \"https://ferhat-s-first-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({items:cart.items,totalQuantity:cart.totalQuantity}),\r\n        }\r\n      );\r\n\r\n      if (!request.ok) {\r\n        throw new Error(\"Something wetn wrong!!!\");\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sentRequest();\r\n\r\n      dispatch(\r\n        uiSliceActions.setNotification({\r\n          status: \"success\",\r\n          title: \"Success \",\r\n          message: \"Request is sent successfully\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiSliceActions.setNotification({\r\n          status: \"error\",\r\n          title: \"Error \",\r\n          message: \"Getting an failed\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/index\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}